/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbms;

import java.awt.event.KeyEvent;
import java.util.ArrayList;

/**
 *
 * @author pc
 */
public class TextPanel extends javax.swing.JPanel {

    
    private static String use = "none";
    private DBMS dbms;
    
    /*
     * Creates new form TextEntryPanel
     */
    public TextPanel() {
        initComponents();
        dbms = new DBMS();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        jTextPane1.setToolTipText("Enter commands");
        jTextPane1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EnterPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void EnterPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EnterPressed
              
        if((evt.getKeyCode() == KeyEvent.VK_ENTER) && (evt.getID() == KeyEvent.KEY_PRESSED)) {
            String currentText = jTextPane1.getText();
            String lastLine = currentText.split("\n")
                    [currentText.split("\n").length-1];
            ArrayList<String[]> results = new ArrayList<>();
                    
            use = QuaeryProcessor.useState(lastLine);
            Object[] command = QuaeryProcessor.parse(lastLine);                                            
            
            switch((int)command[0]) {
                //clear 
                case 0:   
                    System.out.println("clear");
                    jTextPane1.setText(""); //FIX caret on second line                    
                    break;
                //show dbs 
                case 1:                     
                    System.out.println("show dbs");
                    ArrayList<String> dbs = dbms.show_dbs();
                    for(int i=0; i<dbs.size(); i++) {
                        jTextPane1.setText(dbs.get(i) + "\n");
                    }                    
                    break;
                //use db_name
                case 2:
                    System.out.println("use");
                    if(!use.equals("none"))
                        dbms.create_table(use, (String)command[1]);
                    else
                        dbms.create_database(use);                    
                    break;
                //db   
                case 10:
                    System.out.println("db");
                    if(!use.equals("none")) 
                        jTextPane1.setText(use + "\n");
                    else 
                        jTextPane1.setText("select database with use");
                    break;                
                //show tables                                  
                case 11:
                    System.out.println("show tables");
                    if(!use.equals("none")) {
                        ArrayList<String> tables = dbms.show_tables(use);
                        for(int i=0; i<tables.size(); i++) {
                            jTextPane1.setText(tables.get(i) + "\n");
                        }  
                    } else {
                        try {
                            jTextPane1.getDocument().insertString(
                                    jTextPane1.getText().length(), 
                                    "\n".concat(lastLine.concat(" - select database")), 
                                    null);                        
                        } catch(Exception e) {}
                    }
                    break;
                //db.dropDatabase()                
                case 12:
                    System.out.println("dropDatabase");
                    if(!use.equals("none")) {
                        dbms.drop_database(use);
                    } else {
                        try {
                            jTextPane1.getDocument().insertString(
                                    jTextPane1.getText().length(), 
                                    "\n".concat(lastLine.concat(" - select database")), 
                                    null);                        
                        } catch(Exception e) {}
                    }                    
                    break;
                //db.createTable(###)                
                case 13:
                    System.out.println("createTable");
                    if(!use.equals("none")) {
                        dbms.create_table(use, (String)command[1]);
                    } else {
                        try {
                            jTextPane1.getDocument().insertString(
                                    jTextPane1.getText().length(), 
                                    "\n".concat(lastLine.concat(" - select database")), 
                                    null);                        
                        } catch(Exception e) {}
                    }                            
                    break;
                //db.save()    
                case 14:
                    System.out.println("save");
                    if(!use.equals("none")) {
                        dbms.save(use);
                    } else {
                        try {
                            jTextPane1.getDocument().insertString(
                                    jTextPane1.getText().length(), 
                                    "\n".concat(lastLine.concat(" - select database")), 
                                    null);                        
                        } catch(Exception e) {}
                    }        
                    break;                    
                //db.###.drop()                 
                case 101:
                    System.out.println("drop");
                    if(!use.equals("none")) {
                        dbms.drop_table(use, (String)command[1]);
                    } else {
                        try {
                            jTextPane1.getDocument().insertString(
                                    jTextPane1.getText().length(), 
                                    "\n".concat(lastLine.concat(" - select database")), 
                                    null);                        
                        } catch(Exception e) {}
                    }                            
                    break;
                //db.###.find()    
                case 102:
                    System.out.println("find");
                    if(!use.equals("none")) {
                        results.clear();
                        results = dbms.find(use, (String)command[1]);
                    } else {
                        try {
                            jTextPane1.getDocument().insertString(
                                    jTextPane1.getText().length(), 
                                    "\n".concat(lastLine.concat(" - select database")), 
                                    null);                        
                        } catch(Exception e) {}
                    }                           
                    break;                    
                //db.###.find().limit(###)                   
                case 1001:
                    System.out.println("limit");
                    if(!use.equals("none")) {
                        results.clear();                    
                        results = dbms.limit(use, (String)command[1], (int)command[2]);
                    } else {
                        try {
                            jTextPane1.getDocument().insertString(
                                    jTextPane1.getText().length(), 
                                    "\n".concat(lastLine.concat(" - select database")), 
                                    null);                        
                        } catch(Exception e) {}
                    }                    
                    break;
                //db.###.find().sort({key:[-1;1]})                 
                case 1002:
                    System.out.println("TextPanel.sort");
                    if(!use.equals("none")) {
                        results.clear();                    
                        results = dbms.sort(use, (String)command[1], (String)command[2], (int)command[3]);
                    } else {
                        try {
                            jTextPane1.getDocument().insertString(
                                    jTextPane1.getText().length(), 
                                    "\n".concat(lastLine.concat(" - select database")), 
                                    null);                        
                        } catch(Exception e) {}
                    }                                 
                    break;
                //db.###.find().skip(###)                
                case 1003:       
                    if(!use.equals("none")) {
                        results.clear();
                        results = dbms.skip(use, (String)command[1], (int)command[2]);
                    } else {
                        try {
                            jTextPane1.getDocument().insertString(
                                    jTextPane1.getText().length(), 
                                    "\n".concat(lastLine.concat(" - select database")), 
                                    null);                        
                        } catch(Exception e) {}
                    }                          
                    break;                    
                case 999:                
                    try {
                        jTextPane1.getDocument().insertString(
                                jTextPane1.getText().length(), 
                                "\n".concat(lastLine.concat(" is not defined")), 
                                null);
                    } catch(Exception e) {}
            }
        }            
    }//GEN-LAST:event_EnterPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
